[build-system]
requires = [
    "setuptools>=42",
    "wheel",
    "setuptools_scm[toml]>=3.4"
]
build-backend = 'setuptools.build_meta'

[tool.setuptools_scm]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py37,coverage-report,typing,lint
isolated_build = True

[testenv]
description = Run pytest against {envname}.
deps =
    -r{toxinidir}/requirements/main.txt
    -r{toxinidir}/requirements/dev.txt
commands =
    coverage run  --source=app test.py

[testenv:coverage-report]
description = Compile coverage from each test run.
skip_install = true
deps =
  coverage[toml]>=5.0.2
  flasgger==0.9.5
  flask-jwt==0.3.2
  flask-restful==0.3.8
  boto3==1.15.1
  celery[redis]==4.4.7
  numpy==1.19.2
  flask-sqlalchemy==2.4.4
  requests==2.24.0
  pymysql==0.10.1
  .

commands =
    coverage run --source=src/squash test.py

[testenv:typing]
description = Run mypy.
commands =
    mypy app tests setup.py

[testenv:lint]
description = Lint codebase by running pre-commit (Flake8, Black, isort).
skip_install = true
deps =
    pre-commit
commands =
    pre-commit run --all-files

[testenv:docs]
description = Build documentation (HTML) with Sphinx.
commands =
    sphinx-build -n -T -b html -d {envtmpdir}/doctrees docs docs/_build/html
"""

[tool.coverage.run]
parallel = true
branch = true
source = ["run.py"]

[tool.coverage.paths]
source = ["src", ".tox/*/site-packages"]

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:"
]

[tool.black]
line-length = 79
target-version = ['py37']
exclude = '''
/(
    \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | build
  | dist
)/
'''
# Use single-quoted strings so TOML treats the string like a Python r-string
# Multi-line strings are implicitly treated by black as regular expressions

[tool.isort]
include_trailing_comma = true
multi_line_output = 3
known_first_party = ["squash-api", "tests"]
known_third_party = ["boto3", "botocore", "celery", "flasgger", "flask", "flask_jwt", "flask_restful", "flask_sqlalchemy", "numpy", "requests", "setuptools", "sqlalchemy", "werkzeug"]
skip = ["docs/conf.py"]


[flake8]
max-line-length = 79
docstring-convention = "numpy"
extend-exclude = "src/squash/api_v1"
